# DerbyNet Rsyslog Server Configuration
# File: /etc/rsyslog.d/10-derbynet-server.conf
# Purpose: Configure rsyslog server on derbynetpi to receive logs from remote devices

# Enable UDP reception for remote logging
module(load="imudp")
input(type="imudp" port="514")

# Enable TCP reception for reliable logging (optional, comment out if not needed)
# module(load="imtcp")
# input(type="imtcp" port="514")

# Template for DerbyNet logs with structured format
template(name="DerbyNetFormat" type="string"
    string="%timestamp% [%syslogfacility-text%.%syslogseverity-text%] %hostname% %programname%[%procid%]: %msg%\n")

# Template for JSON logs (when messages contain JSON)
template(name="DerbyNetJSONFormat" type="string"
    string="%timestamp% [%syslogfacility-text%.%syslogseverity-text%] %hostname% %programname%[%procid%]: %msg%\n")

# Create DerbyNet log directory
$CreateDirs on
$DirCreateMode 0755
$FileCreateMode 0644
$Umask 0022

# Main DerbyNet log file - all components
if $syslogfacility-text == 'local0' then {
    action(type="omfile" file="/var/log/derbynet/derbynet.log" template="DerbyNetFormat")
    
    # Also log to component-specific files for easier debugging
    if $programname contains 'derbyRace' then {
        action(type="omfile" file="/var/log/derbynet/derbyrace.log" template="DerbyNetFormat")
    }
    
    if $programname contains 'finishtimer' or $programname contains 'FinishTimer' then {
        action(type="omfile" file="/var/log/derbynet/finishtimer.log" template="DerbyNetFormat")
    }
    
    if $programname contains 'derbydisplay' or $programname contains 'DerbyDisplay' then {
        action(type="omfile" file="/var/log/derbynet/derbydisplay.log" template="DerbyNetFormat")
    }
    
    if $programname contains 'hlsfeed' or $programname contains 'hlstranscoder' then {
        action(type="omfile" file="/var/log/derbynet/hlsvideo.log" template="DerbyNetFormat")
    }
    
    if $programname contains 'derbyapi' then {
        action(type="omfile" file="/var/log/derbynet/derbyapi.log" template="DerbyNetFormat")
    }
    
    # Stop processing after logging DerbyNet messages
    stop
}

# Log rotation is handled by logrotate (see separate config file)

# Optional: Forward critical DerbyNet errors to system log
if $syslogfacility-text == 'local0' and $syslogseverity <= 3 then {
    *.err /var/log/syslog
}

# Rate limiting to prevent log flooding
$SystemLogRateLimitInterval 30
$SystemLogRateLimitBurst 1000

# Optional: Log statistics for monitoring
# $ModLoad imuxsock
# $ModLoad immark
# $MarkMessagePeriod 3600  # Log mark message every hour